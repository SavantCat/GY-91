{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"p",
				"println"
			],
			[
				"dl",
				"delay"
			],
			[
				"get",
				"getMagData"
			],
			[
				"r_gy",
				"r_gy"
			],
			[
				"mx",
				"mx"
			],
			[
				"my",
				"my"
			]
		]
	},
	"buffers":
	[
		{
			"file": "inv_mpu.h",
			"settings":
			{
				"buffer_size": 4745,
				"line_ending": "Windows"
			}
		},
		{
			"file": "inv_mpu.c",
			"settings":
			{
				"buffer_size": 97711,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\n    \n//    Serial.println(\"mpu_init !!\");\n//\n//    if (mpu_set_sensors(INV_XYZ_GYRO | INV_XYZ_ACCEL | INV_XYZ_COMPASS) == 0) {\n//      completeInit = true;\n//      Serial.println(\"Enable Gyro and Accel.\");\n//    } else {\n//      completeInit = false;\n//      Serial.println(\"Disable Gyro and Accel.\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    //disable compass\n//    if (mpu_configure_fifo(INV_XYZ_GYRO | INV_XYZ_ACCEL) == 0) {\n//      completeInit = true;\n//      Serial.println(\"Enable FIFO.\");\n//    } else {\n//      completeInit = false;\n//      Serial.println(\"Disable FIFO.\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    if (mpu_set_sample_rate(DMP_RATE)) {\n//      printf(\"\\nmpu_set_sample_rate() failed\\n\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    if (mpu_set_compass_sample_rate(DMP_RATE)) {\n//      printf(\"\\nmpu_set_compass_sample_rate() failed\\n\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    result = dmp_load_motion_driver_firmware();\n//    if ( result == 0 ) {\n//      completeInit = true;\n//      Serial.println(\"Load motion driver.\");\n//    } else {\n//      completeInit = false;\n//      Serial.print(\"Failure load motion driver >> \"); Serial.println(result);\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    signed char gyro_orientation[9] = {\n//      1, 0, 0,\n//      0, 1, 0,\n//      0, 0, 1\n//    };\n//\n//    if (dmp_set_orientation(inv_orientation_matrix_to_scalar(gyro_orientation))) {\n//      printf(\"\\ndmp_set_orientation() failed\\n\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    if (dmp_enable_feature(DMP_FEATURE_6X_LP_QUAT | DMP_FEATURE_SEND_CAL_GYRO | DMP_FEATURE_GYRO_CAL) == 0) {\n//      completeInit = true;\n//      Serial.println(\"Enable DMP features.\");\n//    } else {\n//      completeInit = false;\n//      Serial.println(\"Disable DMP features.\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    if (dmp_set_fifo_rate(DMP_RATE) == 0) {\n//      printf(\"\\ndmp_set_fifo_rate() failed\\n\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    result = mpu_set_gyro_fsr(GYRO_250DPS);\n//    if ( result == 0 ) {\n//      completeInit = true;\n//      Serial.println(\"Set gyro scale.\");\n//    } else {\n//      completeInit = false;\n//      Serial.println(\"Failure set gyro scale.\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    result = ;\n//    if ( result == 0 ) {\n//      completeInit = true;\n//      Serial.println(\"Set Accel scale.\");\n//    } else {\n//      completeInit = false;\n//      Serial.println(\"Failure set Accel scale.\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n//\n//    result = mpu_set_dmp_state(DMP_ON);\n//    if ( result == 0 ) {\n//      completeInit = true;\n//      Serial.println(\"Start DMP.\");\n//    } else {\n//      completeInit = false;\n//      Serial.println(\"Stop DMP.\");\n//    }\n//\n//    printf(\".\");\n//    fflush(stdout);\n\n    //\n    //    result = mpu_set_gyro_fsr(GYRO_250DPS);\n    //    if ( result == 0 ) {\n    //      completeInit = true;\n    //      Serial.println(\"Set gyro scale.\");\n    //    } else {\n    //      completeInit = false;\n    //      Serial.println(\"Failure set gyro scale.\");\n    //    }\n    //\n    //    result = mpu_set_accel_fsr(Accel_2G);\n    //    if ( result == 0 ) {\n    //      completeInit = true;\n    //      Serial.println(\"Set Accel scale.\");\n    //    } else {\n    //      completeInit = false;\n    //      Serial.println(\"Failure set Accel scale.\");\n    //    }\n    //\n    //    mpu_get_power_state((unsigned char *)&result);\n    //\n    //\n    //    result = dmp_load_motion_driver_firmware();\n    //    if ( result == 0 ) {\n    //      completeInit = true;\n    //      Serial.println(\"Load motion driver.\");\n    //    } else {\n    //      completeInit = false;\n    //      Serial.print(\"Failure load motion driver >> \"); Serial.println(result);\n    //    }\n    //\n    //    result = dmp_set_fifo_rate(DMP_RATE);\n    //    if ( result == 0 ) {\n    //      completeInit = true;\n    //      Serial.println(\"Set fifo rate.\");\n    //    } else {\n    //      completeInit = false;\n    //      Serial.println(\"Failure set fifo rate.\");\n    //    }\n    //\n    //    result = mpu_set_dmp_state(DMP_ON);\n    //    if ( result == 0 ) {\n    //      completeInit = true;\n    //      Serial.println(\"Start DMP.\");\n    //    } else {\n    //      completeInit = false;\n    //      Serial.println(\"Stop DMP.\");\n    //    }\n    //\n    //    result = dmp_enable_feature(DMP_FEATURE_6X_LP_QUAT | DMP_FEATURE_SEND_CAL_GYRO | DMP_FEATURE_GYRO_CAL);\n    //    if ( result == 0 ) {\n    //      completeInit = true;\n    //      Serial.println(\"Enable DMP features.\");\n    //    } else {\n    //      completeInit = false;\n    //      Serial.println(\"Disable DMP features.\");\n    //    }\n    //\n    //    if (completeInit) {\n    //      Serial.println(\"All complete initialize.\");\n    //      freeRam();\n    //      Serial.flush();\n    //      delay(100);\n    //    } else {\n    //      Serial.println(\"Error stop initialize.\");\n    //    }",
			"settings":
			{
				"buffer_size": 5057,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inv_mpu_dmp_motion_driver.c",
			"settings":
			{
				"buffer_size": 55616,
				"line_ending": "Unix"
			}
		},
		{
			"file": "BMP280.cpp",
			"settings":
			{
				"buffer_size": 9607,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Volumes/DATA-DISK/github/MEMSMotionTrackingDevice/README.md",
			"settings":
			{
				"buffer_size": 2271,
				"line_ending": "Unix"
			}
		},
		{
			"file": "GY91.ino",
			"settings":
			{
				"buffer_size": 7221,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/arduino-cli/arduino-cli.sublime-build",
					""
				],
				[
					"Packages/arduino-cli/arduino-cli.sublime-build",
					"just build"
				],
				[
					"Packages/arduino-cli/arduino-cli.sublime-build",
					"build and upload"
				]
			],
			[
				"Packages/arduino-cli/arduino-cli.sublime-build",
				"build and upload"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"package coi",
				"Package Control: Install Package"
			],
			[
				"package control u",
				"Package Control: Upgrade Package"
			],
			[
				"package ci",
				"Package Control: Install Package"
			],
			[
				"pakageci",
				"Package Control: Install Package"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: u",
				"Package Control: Upgrade Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"Pakage:i",
				"Package Control: Install Package"
			],
			[
				"Pakage:",
				"Package Control: Install Package"
			]
		],
		"width": 327.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/DATA-DISK/arduino/sketch/GY91"
	],
	"file_history":
	[
		"/Volumes/DATA-DISK/github/nav6/arduino/libraries/InvensenseMotionDriver/inv_mpu.h",
		"/Volumes/DATA-DISK/github/nav6/arduino/libraries/InvensenseMotionDriver/inv_mpu.c",
		"/Volumes/DATA-DISK/github/nav6/arduino/libraries/InvensenseMotionDriver/dmpKey.h",
		"/Volumes/DATA-DISK/github/nav6/arduino/libraries/InvensenseMotionDriver/dmpmap.h",
		"/Volumes/DATA-DISK/arduino/sketch/GY91/dmpmap.h",
		"/Volumes/DATA-DISK/arduino/sketch/GY91/inv_mpu.h",
		"/Volumes/DATA-DISK/arduino/sketch/GY91/dmpKey.h",
		"/Volumes/DATA-DISK/github/nav6/arduino/libraries/InvensenseMotionDriver/inv_mpu_dmp_motion_driver.h",
		"/Volumes/DATA-DISK/github/nav6/arduino/libraries/InvensenseMotionDriver/inv_mpu_dmp_motion_driver.c",
		"/Volumes/DATA-DISK/arduino/sketch/GY91/inv_mpu.c",
		"/Volumes/DATA-DISK/arduino/sketch/GY91/inv_mpu_dmp_motion_driver.c",
		"/Volumes/DATA-DISK/arduino/sketch/GY91/arduino_shim.cpp",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/cmake/FindGflags.cmake",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/theia-build/bulib.sh",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/libraries/akaze/cimg/CMakeLists.txt",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/libraries/cimg/CMakeLists.txt",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/cmake/TheiaConfig.cmake.in",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/libraries/statx/CMakeLists.txt",
		"/Users/Hotta/Desktop/ROSインストールメモ.mdown",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/libraries/cimg/cmake-modules/FindImageMagick.cmake",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/CMakeLists.txt",
		"/Volumes/DATA-DISK/cybercore/TheiaSfM/libraries/akaze/cimg/cmake-modules/FindImageMagick.cmake",
		"/Users/Hotta/Documents/Arduino/GY91v4/MPU9250_dev.h",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/mySmoothpersuitApps/.gitignore",
		"/Users/Hotta/Documents/Arduino/GY91v4/MPU9250_dev.cpp",
		"/Users/Hotta/Library/Application Support/Sublime Text 3/Packages/User/arduino-cli.sublime-settings",
		"/Users/Hotta/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Users/Hotta/Documents/Arduino/GY91v4/MPU9250_dev.c",
		"/Users/Hotta/Documents/Arduino/libraries/MPU-9250/MPU9250BasicAHRS.ino",
		"/Volumes/DATA-DISK/github/Unity-workshop/README.md",
		"/Users/Hotta/Dropbox/project/EYEBOX弐/eyebox仕様書.mdown",
		"/Users/Hotta/Dropbox/eyebox仕様書.mdown",
		"/Users/Hotta/Dropbox/パーカー.mdown",
		"/Volumes/DATA-DISK/github/Unity-workshop/ROSインストールメモ.mdown",
		"/Users/Hotta/Dropbox/作業リスト.mdown",
		"/Users/Hotta/Desktop/計画.mdown",
		"/Users/Hotta/Desktop/3D視線",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/mySmoothpersuitApps/mySmoothParsuit_Server/src/ofApp.cpp",
		"/Users/Hotta/Desktop/論文.md",
		"/Users/Hotta/Desktop/SP_Av5/2016-05-27-11-24-44-091_RAW-R.csv",
		"/Users/Hotta/Desktop/SP_Av5/2016-05-26-19-35-38-621_SP.csv",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/myMacToMacOSC_SERVER/src/ofApp.h",
		"/Volumes/HOTTA_MACHD/プログラム/Theta_S/Assets/OSC/OscController.cs",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myDemo/myfHogTools/src/ofApp.h",
		"/Users/Hotta/Desktop/ros/sample.sh",
		"/Users/Hotta/Desktop/ros/roscore.sh",
		"/Users/Hotta/Desktop/ubuntuまとめ",
		"/Users/Hotta/Desktop/imageProsess.cpp",
		"/Users/Hotta/Desktop/fhogクラス",
		"/Users/Hotta/Desktop/unity/第一回/メモ",
		"/Users/Hotta/Desktop/瞳孔学習データ/leaning.sh",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myDemo/myfHogTools/src/ofApp.cpp",
		"/Volumes/DATA-DISK/arduino/simpleSerialWriter/simpleSerialWriter.ino",
		"/Users/Hotta/Desktop/blink_both/blink_fast_Teensy31.hex",
		"/Users/Hotta/Dropbox/project/EYEBOX/実験データ/EyeDataSet/object_detector.svm",
		"/Volumes/DATA-DISK/library/test/dlib/tools/imglab/bulid/test/faces/image_metadata_stylesheet.xsl",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType001.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType002.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/imagesXmlFile/stereo/ 2016-04-27-14-36-06-417:[1].xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/imagesXmlFile/stereo/ 2016-04-27-14-36-04-679:[0].xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/imagesXmlFile/stereo/ 2016-04-27-14-36-09-694:[3].xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType005.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType004.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType003.xml",
		"/Volumes/DATA-DISK/library/test/dlib/tools/imglab/bulid/test/eye.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/imagesXmlFile/stereo/ 2016-04-27-14-36-12-226:[4].xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/imagesXmlFile/stereo/ 2016-04-27-14-36-08-108:[2].xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType008.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType007.xml",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myTools/HIAnnotationforHOG_093/bin/data/xmls/trainingType006.xml",
		"/Volumes/DATA-DISK/library/libuvc/build/CMakeCache.txt",
		"/Volumes/DATA-DISK/library/libuvc/CMakeLists.txt",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/addons/ofxDlib/addon_config.mk",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/addons/ofxTimestamp/addon_config.mk",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/addons/ofTimestamp/addon_config.mk",
		"/Volumes/DATA-DISK/openFrameWorks/of_v0.9.3_osx_release/apps/myModule/myScreenRecorder/bin/data/changeFrameRate.sh",
		"/Users/Hotta/Desktop/ubuntu-memo",
		"/Volumes/DATA-DISK/github/OpenDTAM/Cpp/OpenDTAM.hpp",
		"/Volumes/DATA-DISK/github/OpenDTAM/Cpp/OpenDTAM.cpp",
		"/Users/Hotta/Desktop/ofxOpenDTAM 2/addon_config.mk",
		"/Users/Hotta/Desktop/ofxOpenDTAM/addon_config.mk",
		"/Users/Hotta/Desktop/ofxOpenDTAM/libs/OpenDTAM/Optimizer/Optimizer.cu",
		"/Users/Hotta/docker/test/test.txt",
		"/Users/Hotta/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings"
	],
	"find":
	{
		"height": 70.0
	},
	"find_in_files":
	{
		"height": 158.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"DMP_SAMPLE_RATE",
			"sample_rate",
			"MAX_COMPASS_SAMPLE_RATE",
			"mpu_set_compass_sample_rate",
			"rate[0]",
			"INV_FILTER_188HZ",
			"Hz",
			"400",
			"DMP_SAMPLE_RATE",
			"dmp_set_fifo_rate",
			"dmp_set_orientation",
			"compass",
			"mpu_set_compass_sample_rate",
			"mpu_set_gyro_fsr",
			"INV_XYZ_ACCEL",
			"mpu_init_structures",
			"mpu_get_int_status",
			"mpu_set_accel_fsr",
			"DMP_FEATURE_6X_LP_QUAT",
			"INV_XYZ_COMPASS",
			"mpu_set_",
			"AK89xx_SECONDARY",
			"mpu_set_sensors",
			"dmp_read_fifo",
			"dmp_load_motion_driver_firmware",
			"mpu_load_firmware",
			"dmp_load_motion_driver_firmware",
			"dmp_enable_feature",
			"mpu_set_dmp_state",
			"dmp_select_device",
			"mpu_configure_fifo",
			"mpu_set_accel_fsr",
			"accel_fsr",
			"mpu_set_accel_fsr",
			"2",
			"mpu_set_gyro_fsr",
			"int_param_s",
			"attachInterrupt",
			"int_param",
			"int_param_s",
			"mpu_init",
			"int_param_s",
			"active_low",
			"int_param_s",
			"active_low",
			"INT_EXIT_LPM0",
			"mpu_init",
			"mpu_selec",
			"mpu_select_device",
			"compass",
			"HMC5883L.cpp",
			"MAG",
			"mag",
			"int_param",
			"9250",
			"      \n",
			"An",
			"      \n",
			"An",
			"      ",
			"FIND_PACKAGE",
			"find_path",
			"FIND_PATH",
			"ImageMagick_INCLUDE_DIRS",
			"GFLAGS_CHECK_INCLUDE_DIRS",
			"CMAKE_PREFIX_PATH",
			"FindGFlags.cmake",
			"ImageMagick",
			"image",
			"ST2",
			"setAK8963Initialize",
			"init",
			"magBias",
			"magCalibration",
			"magcalMPU9250",
			"byte",
			"setFullScaleMagRange",
			"setAK8963Initialize",
			"eInt",
			"PI",
			"beta",
			"setAres",
			"aRes",
			"setMres",
			"setFullScaleAccelRange",
			"  setAres(range);",
			"setAres",
			"aRes",
			"setAres",
			"aRes",
			"setFullScaleAccelRange",
			"setAres",
			"aRes",
			"0x06",
			"setFullScaleMagRange",
			"getRawData6",
			"getMotion6",
			"setFullScaleMagRange",
			"setMres(int Mscale)",
			"setFullScaleMagRange",
			"AK8963",
			"Mscale",
			"0x02 ",
			"MPU9250_PWR_MGMT_1"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "inv_mpu.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4745,
						"regions":
						{
						},
						"selection":
						[
							[
								4440,
								4452
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										4457,
										4458
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										4452,
										4453
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "inv_mpu.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 97711,
						"regions":
						{
						},
						"selection":
						[
							[
								93986,
								93997
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										94028,
										94029
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										93997,
										93998
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 49824.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5057,
						"regions":
						{
						},
						"selection":
						[
							[
								4804,
								4457
							]
						],
						"settings":
						{
							"auto_name": "",
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content"
							],
							"is_init_dirty_state": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "inv_mpu_dmp_motion_driver.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 55616,
						"regions":
						{
						},
						"selection":
						[
							[
								36377,
								36377
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										36390,
										36391
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										35806,
										35807
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12021.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "BMP280.cpp",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 9607,
						"regions":
						{
						},
						"selection":
						[
							[
								3908,
								3923
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										3933,
										3934
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"brackethighlighter.default"
									]
								},
								"open":
								{
									"1":
									[
										3923,
										3924
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3271.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Volumes/DATA-DISK/github/MEMSMotionTrackingDevice/README.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2271,
						"regions":
						{
						},
						"selection":
						[
							[
								1746,
								1746
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_init_dirty_state": false,
							"syntax": "Packages/Markdown/Markdown.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "GY91.ino",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7221,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content"
							],
							"is_init_dirty_state": false,
							"origin_encoding": "ASCII",
							"syntax": "Packages/arduino-cli/arduino.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 120.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/arduino-cli/arduino-cli.sublime-build",
	"project": "gy91.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 354.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"DEFAULT_RESET_VALUE"
			]
		],
		"width": 374.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
